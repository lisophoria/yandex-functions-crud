name: Deploy functions to Yandex Cloud

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function:
          - name: create-order
            secret: YC_CREATE_ORDER_FUNCTION_NAME
          - name: update-order
            secret: YC_UPDATE_ORDER_FUNCTION_NAME
          - name: delete-order
            secret: YC_DELETE_ORDER_FUNCTION_NAME
          - name: get-orders
            secret: YC_GET_ORDER_FUNCTION_NAME

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Yandex CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "${HOME}/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Authenticate YC CLI
        run: |
          echo '${{ secrets.YC_SERVICE_ACCOUNT_KEY }}' > sa-key.json
          yc config set service-account-key sa-key.json
          yc config set cloud-id "${{ secrets.YC_CLOUD_ID }}"
          yc config set folder-id "${{ secrets.YC_FOLDER_ID }}"

      - name: Build & Deploy ${{ matrix.function.name }}
        working-directory: functions/${{ matrix.function.name }}
        run: |
          npm ci
          npm run build
          mkdir package
          cp -r dist/* package/
          cp package.json package/
          cd package
          zip -r function.zip .

          yc serverless function version create \
            --function-name ${{ secrets[matrix.function.secret] }} \
            --runtime nodejs18 \
            --entrypoint index.handler \
            --memory 128m \
            --execution-timeout 10s \
            --source-path=./function.zip \
            --folder-id=${{ secrets.YC_FOLDER_ID }} \
            --service-account-id=${{ secrets.YC_SERVICE_ACCOUNT }} \
            --environment DATABASE=${{ secrets.YC_DATABASE }} \
            --environment ENDPOINT=${{ secrets.YC_ENDPOINT }}
